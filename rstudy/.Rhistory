par(mfrow = c(1,1))
par(mfrow = c(1,4)) # 1,4 주면 일자형태로 그래프나옴
hist(pg$bill_length_mm, col = 1:3)
hist(pg$bill_depth_mm)
hist(pg$flipper_length_mm)
hist(pg$body_mass_g)
par(mfrow = c(1,1))
par(mfrow = c(2,2)) # 1,4 주면 일자형태로 그래프나옴
hist(pg$bill_length_mm, col = 1:5)
hist(pg$bill_depth_mm)
hist(pg$flipper_length_mm)
hist(pg$body_mass_g)
par(mfrow = c(1,1))
par(mfrow = c(2,2)) # 1,4 주면 일자형태로 그래프나옴
hist(pg$bill_length_mm, col = 2:5)
hist(pg$bill_depth_mm)
hist(pg$flipper_length_mm)
hist(pg$body_mass_g)
par(mfrow = c(1,1))
par(mfrow = c(2,2)) # 1,4 주면 일자형태로 그래프나옴
hist(pg$bill_length_mm, col = c('orandge','violet','pink'))
par(mfrow = c(2,2)) # 1,4 주면 일자형태로 그래프나옴
hist(pg$bill_length_mm, col = c('orange','violet','pink'))
hist(pg$bill_depth_mm)
hist(pg$flipper_length_mm)
hist(pg$body_mass_g)
par(mfrow = c(1,1))
plot(pg$bill_length_mm, pg$bill_depth_mm,
pch = 19, col = 'tomato
plot(pg$bill_length_mm, pg$bill_depth_mm,
pch = 19, col = 'tomato')
plot(pg$bill_length_mm, pg$bill_depth_mm,pch = 19, col = 'tomato')
plot(pg$bill_length_mm, pg$bill_depth_mm,
pch = 19, col = 'tomato')
cor(pg$bill_length_mm, pg$bill_depth_mm)
my.color <- ifelse(pg$species == 'Gentoo', 'tomato',
ifelse(pg$species == 'Adelie','steelblue','orange'))
plot(pg$bill_length_mm, pg$bill_depth_mm,
pch = 19, col = my.color)
cor(pg$bill_length_mm, pg$bill_depth_mm)
cor(pg[pg$species == 'Adelie', ]$bill_length_mm,     pg[pg$species == 'Adelie', ]$bill_depth_mm)
cor(pg[pg$species == 'Adelie', ]$bill_length_mm,
pg[pg$species == 'Adelie', ]$bill_depth_mm)
getwd()
plot(iris)
library(cowsay)
say('안녕 난 주니온이야')
say('안녕', by='chicken')
say(by='yoda')
hist(mtcars$wt, col='orange')
str(cars)
?cars
plot(cars$speed, cars$dist,
col = 'tomato',
pch = 19)
class(TRUE)
class(3)
class('Hello')
class('Hello')
7 %% 3
7 %/% 3
7 / 3
print(2^10)
7 %% 3
3 **1
v <-1:100
class(v)
v
n <- 15
if (n%%3 == 0 & n%%5 == 0){
order <- "피자나라치킨공주"
} else if (n%%3 == 0){
order <- "피자"
} else if (n%%5 == 0){
order <- '치킨'
} else {
order <- '다이어트'
}
order
v <- c(10,20,30,40,50,60,70)
v
v[1]
v[7]
v[1:3]
v[3:6]
v[c(1,3,4,7)]
v[-1]
v[c(T,T)]
# 1에서 100까지의 수 중엣 7의 배수의 합?
n <- 1:100
n
sum(seq(7,100,7))
# 1에서 100까지의 수 중엣 7의 배수의 합?
n <- 1:100
seq(7,100,7)
sum(seq(7,100,7))
v <- 1:100
sum(v[v%%7 == 0])
v <- c()
for (i in 1:10){
v[i] <- i
}
v
iris$Sepal.Length
iris$Species
f <- factor(c(1,2,1,2),
levels = 1:3,
labels = c('Male','Female','TG'))
f
levels(f)
f
levels(f)
levels(f)
f <- factor(c(1,2,1,2),
levels = 1:3,
labels = c('Male','Female','TG'))
f
levels(f)
f[1]
f[f == 'Female']
f[6] <- 'Male'
f
f[7]<-'TG'
f
v.1 <- c(1,2,3)
v.2 <- c('F','F','M')
c(v.1,v.2)
lst <- list(id = v.1 , gender = factor(v.2))
lst
lst$id
lst$gender
n <- 32
# n의 약수를 모두 출력하시오
# 반복문은 사용하지마시오.
v <- 1:n
length(v[n %% v == 0])
v[n %% v == 0]
v[n %% v == 0]
n%%v
n%%v==0
v[n%%v==0]
length(v[n%%v==0])
#iris[mean(iris.Petal.Length < patal.Length),mean(Petal.Width)]
iris
mean(iris$Petal.Length)
mean(iris[iris$Petal.Length > mean(iris$Petal.Length), "Petal.Width"])
my.fun <- function(x,y,z){
cat(x,y,z,'\n')
return(x+y*2+z*3)
}
my.fun
my.fun <- function(x,y,z){
cat(x,y,z,'\n')
return(x+y*2+z*3)
}
my.fun
my.fun(1,2,3)
my.fun(1,2, x=3)
my.fun(z=1,2, x=3)
my.fun <- function(x,y,z=0){
cat(x,y,z,'\n')
return(x+y*2+z*3)
}
my.fun(1,2)
divisor <-function (n) {
# to do
v <- 1:n
x <-v[ n %% v == 0]
return (x)
}
divisor(n = 32)
divisor <-function (n) {
# to do
v <- 1:n
x <-v[ n %% v == 0]
return (x)
}
divisor(n = 32)
divisor <-function (n) {
# to do
v <- 1:n
x <-v[ n %% v == 0]
x
}
divisor(n = 32)
divisor <-function (n) {
# to do
v <- 1:n
v[ n %% v == 0]
}
divisor(n = 32)
divisor <-function (n) {
# to do
length((1:n)[ n %% (1:n) == 0])
}
divisor(n = 32)
divisor <-function (n) length((1:n)[ n %% (1:n) == 0])
divisor(n = 32)
div.cnt <-function (n) length((1:n)[ n %% (1:n) == 0])
div.cnt(n = 32)
f1 <- function(n) n ^ 2
sapply(1:9, FUN = f1)# n값에 제곱, 즉,, 1~9까지 제곱됨
barplot(table(iris$Species),col = 'tomato', main = '품종의 막대그래프',xlab = '품종', ylab = '개수')
hist(iris$Petal.Width,col = 'tomato',main = '꽃잎의 너비에대한 히스토그램',xlab = '꽃잎의 너비', ylab = '빈도수')
mean(iris$Petal.Width)
hist(iris$Petal.Width,col = 'tomato',main = '꽃잎의 너비에대한 히스토그램',xlab = '꽃잎의 너비', ylab = '빈도수')
sd(iris$Petal.Width)
var(iris$Petal.Width)
hist(mtcars$hp, col = 'tomato',xlim = c(0,400),ylim = c(0,12))
df <- iris
str(df)
class(df)
dim(df)
nrow(df)
ncol(df)
head(df)
rownames(df)
colnames(df)
v <- c(85,77,96)
v
names(v)
names(v) <-  c('Kor', 'Eng', 'Math')
names(v)
v
v['Kor']
v[c('Eng' , 'Math')]
aggregate(df[, c(1,2,7)],
by = list(Sex = df$Sex),
FUN = mean)
library(penguins)
library(palmerpenguins)
tapply(df$Species,
INDEX = list(df$Species),
FUN = length)
df <- na.omit(penguins)
tapply(df$Species,
INDEX = list(df$Species),
FUN = length)
library(palmerpenguins)
df <- na.omit(penguins)
table(df$species)
prop.table(table(df$species))
tapply(df$Species,
INDEX = list(df$Species),
FUN = length)
tapply(df$species,
INDEX = list(df$species),
FUN = length)
table(df$island)
prop.table(table(df$island))
table(df$sex)
prop.table(table(df$sex))
table(df$island, df$species)
library(gmodels)
install.packages(gmodels)
library(gmodels)
library(gmodels)
CrossTable(df$island, df$species)
installed.packages(gmodels)
CrossTable(df$island, df$species,
prop = F)
?CrosTable
CrossTable(df$island, df$species,
prop = F, prop.chisq = F)
library(gmodels)
library(gmodels)
library(gmodels)
library(gmodels)
library(gmodels)
library(gmobels)
library(gmodels)
install.packages("gmodels")
library(psych)
install.packages('psych')
describe(df)
library(psych)
describe(df)
describe(df)[, c(1:3, 8:9)]
??ggplot
library(ggplot2)
library(ggplot2)
library(ggplot2)
library(ggplot2)
library(ggplot2)
aggregate(df[, c(3:6)],
by = list(species = df$species),
FUN = mean)
aggregate(df)
aggregate(df)
tapply(df$bill_length_mm,
INDEX = list(species = df$species),
FUN = mean)
tapply(df$bill_depth_mm,
INDEX = list(species = df$species),
FUN = mean)
boxplot(flipper_lengrth_mm ~ species,
data = df, col = 2:4)
boxplot(flipper_lengrth_mm ~ species,
data = df, col = 2:4)
boxplot(flipper_lengrth_mm ~ species,
data = df, col = 2:4)
boxplot(flipper_lenrth_mm ~ species,
data = df, col = 2:4)
boxplot(flipper_length_mm ~ species,
data = df, col = 2:4)
boxplot(flipper_depth_mm ~ species,
data = df, col = 2:4)
boxplot(bill_depth_mm ~ species,
data = df, col = 2:4)
df <- data.frame(df)
df <- data.frame(df)
adelie <- split(df, df$species)$adelie
adelie
outlier <- boxplot.stats(adelie$flipper_length_mm)$out
outlier
df[df$flipper_length_mm %in% outlier,]
df <- data.frame(df)
adelie <- split(df, df$species)$Adelie
adelie
outlier <- boxplot.stats(adelie$flipper_length_mm)$out
outlier
df[df$flipper_length_mm %in% outlier,]
df <- data.frame(df)
adelie <- split(df, df$species)$Adelie
adelie
outlier <- boxplot.stats(adelie$flipper_length_mm)$out
outlier
df[df$flipper_length_mm %in% outlier,]
df <- data.frame(df)
adelie <- split(df, df$species)$Adelie
adelie
outlier <- boxplot.stats(adelie$flipper_length_mm)$out
outlier
df[df$flipper_length_mm %in% outlier,]
df <- data.frame(df)
adelie <- split(df, df$species)$Adelie
adelie
outlier <- boxplot.stats(adelie$flipper_length_mm)$out
outlier
df[df$flipper_length_mm %in% outlier,]
df <- data.frame(df)
adelie <- split(df, df$species)$Adelie
adelie
outlier <- boxplot.stats(adelie$flipper_length_mm)$out
outlier
df[df$flipper_length_mm %in% outlier, ]
length(df[df$flipper_length_mm %in% outlier, ])
library(palmerpenguins)
df <- na.omit(penguins)
df <- data.frame(df)
ord <- order(df$flipper_length_mm, -df$body_mass_g)
ord
df[ord,]
head(df[ord,], n = 10)
head(df[ord, 5:6], n = 10)
setwd("C:/rstudio-project")
knitr::opts_chunk$set(echo = TRUE)
summary(cars)
plot(pressure)
install_tinytex
install.packages('tinytex')
tinytex::install_tinytex()
library(palmerpenguins)
#인스톨 패키지 펭귄....
data(package = "palmerpenguins")
data("penguins")
pg <- data.frame(penguins)
str(pg)
library(VIM)
aggr(pg, numbers = T, prop = F)
pg <- na.omit(pg)
dim(pg)
str(pg)
table(pg$species)
barplot(table(pg$species))
table(pg$island)
barplot(table(pg$island))
table(pg$sex)
barplot(table(pg$sex))
str(pg[, 3:6])
summary(pg[, 3:6])
par(mfrow = c(2,2)) # 1,4 주면 일자형태로 그래프나옴
hist(pg$bill_length_mm)
hist(pg$bill_depth_mm)
hist(pg$flipper_length_mm)
hist(pg$body_mass_g)
par(mfrow = c(1,1))
par(mfrow = c(2,2)) # 1,4 주면 일자형태로 그래프나옴
hist(pg$bill_length_mm, col = c('orange','violet','pink'))
hist(pg$bill_depth_mm)
hist(pg$flipper_length_mm)
hist(pg$body_mass_g)
par(mfrow = c(1,1))
my.color <- ifelse(pg$species == 'Gentoo', 'tomato',
ifelse(pg$species == 'Adelie','steelblue','orange'))
plot(pg$bill_length_mm, pg$bill_depth_mm,
pch = 19, col = my.color)
cor(pg$bill_length_mm, pg$bill_depth_mm)
cor(pg[pg$species == 'Adelie', ]$bill_length_mm,
pg[pg$species == 'Adelie', ]$bill_depth_mm)
par(mfrow = c(2,2)) # 1,4 주면 일자형태로 그래프나옴
hist(pg$bill_length_mm, col = c('orange','violet','pink'))
hist(pg$bill_depth_mm)
hist(pg$flipper_length_mm)
hist(pg$body_mass_g)
par(mfrow = c(1,1))
my.color <- ifelse(pg$species == 'Gentoo', 'tomato',
ifelse(pg$species == 'Adelie','steelblue','orange'))
plot(pg$bill_length_mm, pg$bill_depth_mm,
pch = 19, col = my.color)
plot(pg$bill_length_mm, pg$bill_depth_mm,
pch = 19, col = my.color)
cor(pg$bill_length_mm, pg$bill_depth_mm)
cor(pg[pg$species == 'Adelie', ]$bill_length_mm,
pg[pg$species == 'Adelie', ]$bill_depth_mm)
plot(pg$bill_length_mm, pg$bill_depth_mm,
pch = 19, col = my.color)
library(palmerpenguins)
plot(pg$bill_length_mm, pg$bill_depth_mm,
pch = 19, col = my.color)
par(mfrow = c(2,2)) # 1,4 주면 일자형태로 그래프나옴
hist(pg$bill_length_mm)
hist(pg$bill_depth_mm)
hist(pg$flipper_length_mm)
hist(pg$body_mass_g)
par(mfrow = c(1,1))
my.color <- ifelse(pg$species == 'Gentoo', 'tomato',
ifelse(pg$species == 'Adelie','steelblue','orange'))
plot(pg$bill_length_mm, pg$bill_depth_mm,
pch = 19, col = my.color)
cor(pg$bill_length_mm, pg$bill_depth_mm)
cor(pg[pg$species == 'Adelie', ]$bill_length_mm,
pg[pg$species == 'Adelie', ]$bill_depth_mm)
par(mfrow = c(2,2)) # 1,4 주면 일자형태로 그래프나옴
hist(pg$bill_length_mm, col = c('orange','violet','pink'))
hist(pg$bill_depth_mm)
hist(pg$flipper_length_mm)
hist(pg$body_mass_g)
par(mfrow = c(1,1))
my.color <- ifelse(pg$species == 'Gentoo', 'tomato',
ifelse(pg$species == 'Adelie','steelblue','orange'))
plot(pg$bill_length_mm, pg$bill_depth_mm,
pch = 19, col = my.color)
df <- na.omit(penguins)
plot(bill_depth_mm ~ bill_length_mm, data = df)
plot(bill_depth_mm ~ bill_length_mm, data = df,
pch = 19, col = 'tomato')
plot(bill_depth_mm ~ bill_length_mm, data = df,
pch = 19, col = 'tomato')
df$species
as.numeric(df$species)
plot(bill_depth_mm ~ bill_length_mm, data = df,
pch = 19, col = as.numeric(df$species)+1)
library(palmerpenguins)
library(palmerpenguins)
library(palmerpenguins)
df <- na.omit(penguins)
plot(bill_depth_mm ~ bill_length_mm, data = df,
pch = 19, col = 'tomato')
as.numeric(df$species) # 종별로 숫자로 바뀜
df <- na.omit(penguins)
plot(bill_depth_mm ~ bill_length_mm, data = df,
pch = 19, col = as.numeric(df$species)+1)
knitr::opts_chunk$set(echo = TRUE)
df <- read.csv('C:\rstudio-project\TITANIC\train.csv',header = T)
str(df)
df <- read.csv('C:\rstudio-project\TITANIC\train.csv',header = T)
str(df)
df <- read.csv('\TITANIC\train.csv',header = T)
mosaicplot(Survived ~ Pclass, data = df,
col = 2:4)
mosaicplot(Survived ~ Pclass, data = df,
col = 2:4)
df <- read.csv('..\rstudio-project\TITANIC\train.csv',header = T)
df <- read.csv('.\rstudio-project\TITANIC\train.csv',header = T)
df <- read.csv('\rstudio-project\TITANIC\train.csv',header = T)
str(df)
df <- read.csv('C:\rstudio-project\TITANIC\train.csv',header = T)
str(df)
df <- read.csv('C:\rstudio-project\TITANIC\train.csv',header = T)
df <- read.csv('C:\rstudio-project\TITANIC\train.csv',header = T)
df <- read.csv('C:\rstudio-project\TITANIC\train.csv',header = T)
str(df)
df <- read.csv('C:\rstudio-project\TITANIC\train.csv',header = T)
df <- read.csv('..\TITANIC\train.csv',header = T)
str(df)
df <- read.csv('..\TITANIC\train.csv',header = T)
df <- read.csv('..\TITANIC\train.csv',header = F)
df <- read.csv('..\TITANIC\train.csv',header = F)
str(df)
df <- read.csv('../TITANIC/train.csv',header = F)
df <- read.csv('../TITANIC/train.csv',header = F)
str(df)
mosaicplot(Pclass ~ Survived, data = df,
col = 2:4)
mosaicplot(Pclass ~ Survived, data = df,
col = 2:4)
dim(df)
mosaicplot(Pclass ~ Survived, data = df,
col = 2:4)
df <- read.csv("../rstudio-project/TITANIC_TEST", header = T)
df <- read.csv("../rstudio-project/TITANIC_TEST", header = F)
df <- read.csv("../rstudio-project/TITANIC_TEST/train.csv", header = F)
str(df)
head(full, 10)
head(df, 10)
df <- data.frame(Class,Survived)
frame1
head(df, 10)
df
class(Df)
class(df)
